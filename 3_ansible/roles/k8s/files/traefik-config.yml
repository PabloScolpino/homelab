---
apiVersion: helm.cattle.io/v1
kind: HelmChartConfig
metadata:
  name: traefik
  namespace: kube-system
spec:
  valuesContent: |-

    # Check options for configuration at:
    # https://github.com/traefik/traefik-helm-chart/blob/master/traefik/values.yaml

    ####################################################################
    # Enable debug logs
    logs:
      general:
        # By default, the logs use a text format (common), but you can
        # also ask for the json format in the format option
        # format: json
        # By default, the level is set to ERROR. Alternative logging levels are DEBUG, PANIC, FATAL, ERROR, WARN, and INFO.
        level: WARN

    ####################################################################
    # Configure SSL redirect (WIP)
    # ports:
    #   web:
    #     redirectTo: websecure
    ssl:
      enabled: false
      permanentRedirect: false

    ####################################################################
    # Enable persistence
    #
    # Enable persistence using Persistent Volume Claims
    # ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    # After the pvc has been mounted, add the configs into traefik by using the `additionalArguments` list below, eg:
    # additionalArguments:
    # - "--certificatesresolvers.le.acme.storage=/data/acme.json"
    # It will persist TLS certificates.
    # persistence:
    #   enabled: true
    #   name: data
    #   existingClaim: "traefik-persistence"
    #   accessMode: ReadWriteOnce
    #   size: 128Mi
    #   storageClass: "local-path"
    #   path: /data
    #   annotations: {}
    #   # subPath: "" # only mount a subpath of the Volume into the pod

    # additionalArguments:
    #   # Test env
    #   - --certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
    #   - --certificatesresolvers.letsencrypt.acme.email=pabloscolpino@gmail.com
    #   - --certificatesresolvers.letsencrypt.acme.storage=/data/letsencrypt_tls.json
    #   # TLS Challenge
    #   - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      # DNS Challenge
      # - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      # - --certificatesresolvers.letsencrypt.acme.dnschallenge.delaybeforecheck=0
      # - --certificatesResolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53
